<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:WPFDevelopers.Minimal.Controls"
    xmlns:helpers="clr-namespace:WPFDevelopers.Minimal.Helpers">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Themes/Basic/ControlBasic.xaml" />
        <ResourceDictionary Source="../Themes/Basic/Animations.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style
        x:Key="WD.BaseButton"
        BasedOn="{StaticResource WD.ControlBasicStyle}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <!--<Setter Property="helpers:ElementHelper.CornerRadius" Value="3" />-->
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
    </Style>

    <Style
        x:Key="WD.NormalButton"
        BasedOn="{StaticResource WD.BaseButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource WD.RegularTextSolidColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <controls:SmallPanel>
                        <Border
                            Name="PART_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            Opacity=".4"
                            SnapsToDevicePixels="True" />
                        <ContentPresenter
                            Name="PART_ContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </controls:SmallPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource WD.ButtonFocusVisualColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="WD.PrimaryButton"
        BasedOn="{StaticResource WD.BaseButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource WD.WindowForegroundColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <controls:SmallPanel>
                        <Border
                            Name="PART_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </controls:SmallPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource WD.PrimaryPressedSolidColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource WD.PrimaryPressedSolidColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource WD.PrimaryMouseOverSolidColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="WD.DefaultButton"
        BasedOn="{StaticResource WD.BaseButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WD.RegularTextSolidColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <controls:SmallPanel>
                        <Border
                            x:Name="PART_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentPresenter
                            x:Name="PART_ContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </controls:SmallPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource WD.DefaultBorderBrushSolidColorBrush}" />
                            <Setter Property="Background" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource WD.DefaultBackgroundPressedSolidColorBrush}" />
                            <Setter Property="Background" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource WD.DefaultBackgroundPressedSolidColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource WD.DefaultBorderBrushSolidColorBrush}" />
                            <Setter Property="Background" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="WD.SuccessPrimaryButton"
        BasedOn="{StaticResource WD.PrimaryButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource WD.WindowForegroundColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource WD.SuccessSolidColorBrush}" />
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource WD.SuccessPressedSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{DynamicResource WD.SuccessPressedSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource WD.SuccessMouseOverSolidColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="WD.SuccessDefaultButton"
        BasedOn="{StaticResource WD.DefaultButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource WD.SuccessBorderBrushSolidColorBrush}" />
                <Setter Property="Background" Value="{DynamicResource WD.SuccessBackgroundSolidColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WD.SuccessSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource WD.SuccessPressedSolidColorBrush}" />
                <Setter Property="Background" Value="{DynamicResource WD.SuccessBackgroundSolidColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WD.SuccessPressedSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource WD.SuccessBorderBrushSolidColorBrush}" />
                <Setter Property="Background" Value="{DynamicResource WD.SuccessBackgroundSolidColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WD.SuccessSolidColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="WD.WarningPrimaryButton"
        BasedOn="{StaticResource WD.PrimaryButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource WD.WindowForegroundColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource WD.WarningSolidColorBrush}" />
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource WD.WarningPressedSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{DynamicResource WD.WarningPressedSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource WD.WarningMouseOverSolidColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="WD.WarningDefaultButton"
        BasedOn="{StaticResource WD.DefaultButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource WD.WarningBorderBrushSolidColorBrush}" />
                <Setter Property="Background" Value="{DynamicResource WD.WarningBackgroundSolidColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WD.WarningSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource WD.WarningPressedSolidColorBrush}" />
                <Setter Property="Background" Value="{DynamicResource WD.WarningBackgroundSolidColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WD.WarningPressedSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource WD.WarningBorderBrushSolidColorBrush}" />
                <Setter Property="Background" Value="{DynamicResource WD.WarningBackgroundSolidColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WD.WarningSolidColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="WD.DangerPrimaryButton"
        BasedOn="{StaticResource WD.PrimaryButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource WD.WindowForegroundColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource WD.DangerSolidColorBrush}" />
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource WD.DangerPressedSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{DynamicResource WD.DangerPressedSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource WD.DangerMouseOverSolidColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="WD.DangerDefaultButton"
        BasedOn="{StaticResource WD.DefaultButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource WD.DangerBorderBrushSolidColorBrush}" />
                <Setter Property="Background" Value="{DynamicResource WD.DangerBackgroundSolidColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WD.DangerSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource WD.DangerPressedSolidColorBrush}" />
                <Setter Property="Background" Value="{DynamicResource WD.DangerBackgroundSolidColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WD.DangerPressedSolidColorBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource WD.DangerBorderBrushSolidColorBrush}" />
                <Setter Property="Background" Value="{DynamicResource WD.DangerBackgroundSolidColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WD.DangerSolidColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="WD.PathButton"
        BasedOn="{StaticResource WD.BaseButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <ContentPresenter
                            x:Name="PART_ContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Opacity=".8" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WD.WindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource WD.PrimaryTextSolidColorBrush}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <controls:SmallPanel Background="Transparent">
                        <ContentPresenter
                            x:Name="PART_ContentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Opacity="0.7" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_ContentPresenter"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_ContentPresenter"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_ContentPresenter"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.3"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </controls:SmallPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource WD.DefaultButton}" TargetType="{x:Type Button}" />
</ResourceDictionary>